PROGRAM         ::= ‘start’ [ STATEMENT* | PROCDEF ]  ‘end’

STATEMENT       ::= [ DECSTATEMENT | ASNSTATEMENT | PRINTSTATEMENT | PROCCALL ]

DECSTATEMENT    ::= [ INGREDIENTDEC | STOREDEC | MEASUREDEC | RECIPEDEC ]
ASNSTATEMENT    ::= [ STOREASN | RECIPEASN | PARTCOSTASN ]

SEP             ::= ‘,’

INGREDIENTNAME  ::= STRING
INGREDIENTS     ::= INGREDIENTNAME (SEP INGREDIENTNAME)*
INGREDIENTDEC   ::= ‘new ingredients:’ INGREDIENTS ‘;’

STORENAME       ::= STRING
STORES          ::= STORENAME (SEP STORENAME)*
STOREDEC        ::= ‘new stores:’ STORES ‘;’
STOREASN        ::= ‘you can buy ’ INGREDIENTS ‘ at ’ STORENAME ‘;’

MEASURENAME     ::= STRING
MEASURES        ::= MEASURENAME (SEP MEASURENAME)*
MEASUREDEC      ::= ‘new measurements:’ MEASURES ‘;’

RECIPENAME      ::= STRING
RECIPES         ::= RECIPENAME (SEP RECIPENAME)*
RECIPEDEC       ::= ‘new recipes:’ RECIPES ‘;’
RECIPEPART      ::= NUMBER ‘ ‘ MEASURENAME ‘ ‘ (‘of ')? INGREDIENTNAME
RECIPEPARTS     ::= RECIPEPART (SEP RECIPEPART)*
RECIPEASN       ::= ‘you make ’ RECIPENAME ‘ with ’ RECIPEPARTS ‘;’

PARTCOST        ::= NUMBER
PARTCOSTASN     ::= ‘you can buy ’ RECIPEPART ‘ at ’ STORENAME ‘ for ’ PARTCOST ‘ dollars;’

USE             ::= [ INGREDIENTNAME | STORENAME | MEASURENAME | RECIPENAME | PROCPARAM ]
MINCOST         ::= ‘cheapest way to make ’ RECIPENAME ‘;’

PRINTSTATEMENT  ::= ‘print’ [ MINCOST | USE ] ‘;’

PROCNAME        ::= STRING
PROCPARAM       ::= STRING
PROCDEF         ::= ‘def ’ PROCNAME PROCBLOCK
PROCBLOCK       ::= ‘ with ’ PROCPARAM ‘procstart‘ STATEMENT* ‘procend’
PROCCALL        ::= ‘call ' PROCNAME ‘ with ’ PROCPARAM ‘;’
